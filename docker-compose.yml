services:

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Initialize Airflow variables
  airflow-init-variables:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-init-variables
    env_file:
      - .env
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    volumes:
      - ./:/opt/airflow
    command: >
      bash -c "
        echo 'Waiting for postgres...' &&
        while ! nc -z postgres 5432; do sleep 1; done &&
        echo 'PostgreSQL started' &&
        airflow db migrate &&
        airflow users create --username ${AIRFLOW_ADMIN_USERNAME} --firstname Admin --lastname User --role Admin --email ${AIRFLOW_ADMIN_EMAIL} --password ${AIRFLOW_ADMIN_PASSWORD} || echo 'User already exists' &&
        airflow variables import /opt/airflow/variables.json || echo 'Variables already exist or import failed' &&
        echo 'Variables initialization complete!'
      "
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  airflow:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow
    depends_on:
      airflow-init-variables:
        condition: service_completed_successfully
    ports:
      - "${AIRFLOW_EXTERNAL_PORT}:8080"
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=${AIRFLOW__CORE__EXECUTOR}
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
    command: >
     bash -c "
        echo 'Starting Airflow scheduler in background...' &&
        airflow scheduler &
        echo 'Starting Airflow webserver...' &&
        airflow webserver --port 8080
      "

volumes:
  postgres_data: